version: '3.7'

services:
  gateway:
    image: gateway
    restart: always
    build:
      context: ./lab4/gateway
    ports:
      - "8080:8080"
    environment:
      - spring.config.import=configserver:http://config-server:8888
      - spring.application.name=gateway
      - spring.profiles.active=native
      - spring.cloud.config.label=latest
      - spring.cloud.config.username=configUser
      - spring.cloud.config.password=configPass
      - management.endpoints.web.exposure.include=health,info,refresh
    depends_on:
      config-server:
        condition: service_started
      discovery-service:
        condition: service_started

  city-management-1:
    image: city-management
    restart: always
    build:
      context: ./lab4/city-management
    environment:
      - spring.application.name=city-management
      - eureka.instance.instance-id=city-management-1
      - spring.config.import=configserver:http://config-server:8888
      - spring.profiles.active=native
      - spring.cloud.config.label=latest
      - spring.cloud.config.username=configUser
      - spring.cloud.config.password=configPass
      - management.endpoints.web.exposure.include=health,info,refresh
    depends_on:
      config-server:
        condition: service_started
      elements:
        condition: service_started
      discovery-service:
        condition: service_started

  city-management-2:
    image: city-management
    restart: always
    build:
      context: ./lab4/city-management
    environment:
      - spring.application.name=city-management
      - eureka.instance.instance-id=city-management-2
      - spring.config.import=configserver:http://config-server:8888
      - spring.profiles.active=native
      - spring.cloud.config.label=latest
      - spring.cloud.config.username=configUser
      - spring.cloud.config.password=configPass
      - management.endpoints.web.exposure.include=health,info,refresh
    depends_on:
      config-server:
        condition: service_started
      elements:
        condition: service_started
      discovery-service:
        condition: service_started

  country-management:
    image: country-management
    restart: always
    build:
      context: ./lab4/country-management
    environment:
      - spring.application.name=country-management
      - CITY_URL=http://city-management:8080
      - spring.config.import=configserver:http://config-server:8888
      - spring.profiles.active=native
      - spring.cloud.config.label=latest
      - spring.cloud.config.username=configUser
      - spring.cloud.config.password=configPass
      - management.endpoints.web.exposure.include=health,info,refresh
    depends_on:
      config-server:
        condition: service_started
      categories:
        condition: service_started
      discovery-service:
        condition: service_started

  angular-app:
    image: angular-app
    restart: always
    build:
      context: ./angular-app
    ports:
      - "8083:80"
    environment:
      - API_URL=http://gateway:8080/api

  categories:
    image: postgres:15
    container_name: categories
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=categories
    volumes:
      - categories-data:/var/lib/postgresql/data

  elements:
    image: postgres:15
    container_name: elements
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=elements
    volumes:
      - elements-data:/var/lib/postgresql/data

  discovery-service:
    restart: always
    image: discovery-service
    build:
      context: ./discovery-service
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_started
    environment:
      - spring.config.import=configserver:http://config-server:8888
      - spring.application.name=discovery-service
      - spring.profiles.active=native
      - spring.cloud.config.label=latest
      - spring.cloud.config.username=configUser
      - spring.cloud.config.password=configPass
      - spring.cloud.config.retry.enabled=true
      - spring.cloud.config.retry.maxAttempts=10
      - spring.cloud.config.retry.backoff.initialInterval=5000
      - spring.cloud.config.retry.backoff.maxInterval=5000
      - spring.cloud.config.retry.backoff.multiplier=2.0

  config-server:
    restart: always
    image: config-server
    build:
      context: ./config-server
    ports:
      - "8888:8888"
    environment:
      - server.port=8888
      - spring.application.name=config-server
      - spring.profiles.active=native
      - spring.cloud.config.server.native.search-locations=classpath:/config/
      - spring.security.user.name=configUser
      - spring.security.user.password=configPass
      - logging.level.root=DEBUG

volumes:
  elements-data:
  categories-data: